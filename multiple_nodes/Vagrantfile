Vagrant.configure("2") do |config|
  config.vm.box = "centos/7"
#  config.vm.network "private_network", type: "dhcp"


  N = 6
  (2..N).each do |machine_id|
    config.vm.define "node#{machine_id}" do |machine|
      machine.vm.hostname = "node#{machine_id}"
      machine.vm.network "private_network", ip: "192.168.10.#{machine_id}"
      machine.vm.network :forwarded_port, guest: 80, host: "808#{machine_id}"
      machine.vm.provider "virtualbox" do |v|
        v.name = "node#{machine_id}"
        v.linked_clone = true
      end
      machine.hostsupdater.aliases = ["node#{machine_id}.localdomain.com"]
      machine.vm.provision "shell" do |s|
        ssh_pub_key1 = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
        ssh_pub_key2 = File.readlines("#{Dir.home}/.ssh/ssh_key.pub").first.strip
        ssh_pub_key3 = File.readlines("#{Dir.home}/.ssh/jenkins.pub").first.strip
        s.inline = <<-SHELL
          echo #{ssh_pub_key1} >> /home/vagrant/.ssh/authorized_keys
          echo #{ssh_pub_key2} >> /home/vagrant/.ssh/authorized_keys
          echo #{ssh_pub_key3} >> /home/vagrant/.ssh/authorized_keys
        SHELL
      end
      #if machine_id == N
      machine.vm.provision :ansible do |ansible|
          # Disable default limit to connect to all the machines
        ansible.limit = "all"
        ansible.playbook = "playbook/playbook.yml"
       #end
      end
    end
  end
end
